{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport auth0 from 'lib/auth0';\nimport { firebase } from 'lib';\nconst firebaseDB = firebase.database();\nexport default (async (req, res) => {\n  try {\n    firebaseDB.ref('questions').once('value', snapshot => {\n      const questionsArr = [];\n      snapshot.forEach(childSnapshot => {\n        questionsArr.push(_objectSpread({\n          id: childSnapshot.key\n        }, childSnapshot.val()));\n      });\n      questionsArr.reverse();\n      res.status(200).json(questionsArr);\n    });\n  } catch (error) {\n    console.error(error);\n    res.status(error.status || 500).json({\n      code: error.code,\n      error: error.message\n    });\n  }\n});","map":{"version":3,"sources":["C:/Users/Usuario/Documents/GitHub/next-meditus/next-meditus/pages/api/post/index.js"],"names":["auth0","firebase","firebaseDB","database","req","res","ref","once","snapshot","questionsArr","forEach","childSnapshot","push","id","key","val","reverse","status","json","error","console","code","message"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,WAAlB;AACA,SAASC,QAAT,QAAyB,KAAzB;AACA,MAAMC,UAAU,GAAGD,QAAQ,CAACE,QAAT,EAAnB;AAEA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC/B,MAAI;AACAH,IAAAA,UAAU,CAACI,GAAX,CAAe,WAAf,EAA4BC,IAA5B,CAAiC,OAAjC,EAA2CC,QAAD,IAAc;AACpD,YAAMC,YAAY,GAAG,EAArB;AACAD,MAAAA,QAAQ,CAACE,OAAT,CAAkBC,aAAD,IAAmB;AAChCF,QAAAA,YAAY,CAACG,IAAb;AACIC,UAAAA,EAAE,EAAEF,aAAa,CAACG;AADtB,WAEOH,aAAa,CAACI,GAAd,EAFP;AAIH,OALD;AAMAN,MAAAA,YAAY,CAACO,OAAb;AACAX,MAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBT,YAArB;AACH,KAVD;AAYH,GAbD,CAaE,OAAOU,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACAd,IAAAA,GAAG,CAACY,MAAJ,CAAWE,KAAK,CAACF,MAAN,IAAgB,GAA3B,EAAgCC,IAAhC,CAAqC;AACjCG,MAAAA,IAAI,EAAEF,KAAK,CAACE,IADqB;AAEjCF,MAAAA,KAAK,EAAEA,KAAK,CAACG;AAFoB,KAArC;AAIH;AAEJ,CAtBD","sourcesContent":["import auth0 from 'lib/auth0';\nimport { firebase } from 'lib';\nconst firebaseDB = firebase.database();\n\nexport default async (req, res) => {\n    try {\n        firebaseDB.ref('questions').once('value', (snapshot) => {\n            const questionsArr = [];\n            snapshot.forEach((childSnapshot) => {\n                questionsArr.push({\n                    id: childSnapshot.key,\n                    ...childSnapshot.val()\n                })\n            })\n            questionsArr.reverse()\n            res.status(200).json(questionsArr);\n        })\n\n    } catch (error) {\n        console.error(error);\n        res.status(error.status || 500).json({\n            code: error.code,\n            error: error.message\n        });\n    }\n\n};"]},"metadata":{},"sourceType":"module"}